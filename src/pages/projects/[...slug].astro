---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import BackToPrev from "@components/BackToPrev.astro";
import Link from "@components/Link.astro";
import FancyLink from "@components/FancyLink.astro";

export async function getStaticPaths() {
  const projects = (await getCollection("projects"))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: project,
  }));
}
type Props = CollectionEntry<"projects">;

const project = Astro.props;
const { Content } = await project.render();
---

<PageLayout title={project.data.title} description={project.data.description}>
  <Container>
    <div class="animate">
      <BackToPrev href="/projects"> Back to projects </BackToPrev>
    </div>
    <div class="space-y-1 my-10">
      <h1
        class="animate text-3xl font-caveat text-indigo-600 dark:text-indigo-400"
      >
        {project.data.title}
      </h1>
      {
        (project.data.demoURL || project.data.repoURL) && (
          <nav class="animate flex gap-1">
            {project.data.demoURL && (
              <FancyLink href={project.data.demoURL} external>
                live demo
              </FancyLink>
            )}
            {project.data.demoURL && project.data.repoURL && <span>/</span>}
            {project.data.repoURL && (
              <Link href={project.data.repoURL} external>
                repo
              </Link>
            )}
          </nav>
        )
      }
    </div>
    <article class="animate text-pretty">
      <Content />
    </article>
  </Container>
</PageLayout>
