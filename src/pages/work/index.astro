---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import { dateRange } from "@lib/utils";
import { WORK } from "@consts";
import TimelineItem from "@components/TimelineItem.astro";
import Text from "@components/Text.astro";

const collection = (await getCollection("work")).sort((a, b) => {
  // Handle "Current" end dates first
  if (a.data.dateEnd === "Current") return -1;
  if (b.data.dateEnd === "Current") return 1;

  // If neither is "Current", sort by start date (descending)
  return (
    new Date(b.data.dateStart).valueOf() - new Date(a.data.dateStart).valueOf()
  );
});

const work = await Promise.all(
  collection.map(async (item) => {
    const { Content } = await item.render();
    return { ...item, Content };
  })
);
---

<PageLayout title={WORK.TITLE} description={WORK.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <Text
        tag="h1"
        variant="heading"
        class="animate text-indigo-600 dark:text-indigo-400"
        >Work Experience</Text
      >
      <div class="-my-6">
        {
          work.map((entry) => (
            <TimelineItem
              date={dateRange(entry.data.dateStart, entry.data.dateEnd)}
              role={entry.data.role}
              company={entry.data.company}
              link={entry.data.URL}
            >
              <entry.Content />
            </TimelineItem>
          ))
        }
      </div>
    </div>
  </Container>
</PageLayout>
